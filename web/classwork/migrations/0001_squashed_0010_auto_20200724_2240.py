# Generated by Django 3.0.8 on 2020-07-25 05:47

import classwork.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    replaces = [('classwork', '0001_initial'), ('classwork', '0002_auto_20200624_2259'), ('classwork', '0003_auto_20200626_2007'), ('classwork', '0004_auto_20200627_2344'), ('classwork', '0005_auto_20200710_0217'), ('classwork', '0006_auto_20200711_0539'), ('classwork', '0007_auto_20200713_0559'), ('classwork', '0008_auto_20200717_1917'), ('classwork', '0009_auto_20200724_2235'), ('classwork', '0010_auto_20200724_2240')]

    initial = True

    dependencies = [
        ('users', '0005_auto_20200724_2235'),
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ClassOffer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num_level', models.IntegerField(default=0, editable=False)),
                ('teachers', models.CharField(default='Chris Chapman', max_length=125)),
                ('class_day', models.SmallIntegerField(choices=[(0, 'Monday'), (1, 'Tuesday'), (2, 'Wednesday'), (3, 'Thursday'), (4, 'Friday'), (5, 'Saturday'), (6, 'Sunday')], default=3)),
                ('start_time', models.TimeField()),
                ('date_added', models.DateField(auto_now_add=True)),
                ('date_modified', models.DateField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('code', models.CharField(max_length=120)),
                ('address', models.CharField(max_length=191)),
                ('city', models.CharField(default='Seattle', max_length=120)),
                ('state', models.CharField(default='WA', max_length=63)),
                ('zipcode', models.CharField(max_length=15)),
                ('date_added', models.DateField(auto_now_add=True)),
                ('date_modified', models.DateField(auto_now=True)),
                ('map_link', models.URLField(blank=True, verbose_name='Map Link')),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('variant', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('waiting', 'Waiting for confirmation'), ('preauth', 'Pre-authorized'), ('confirmed', 'Confirmed'), ('rejected', 'Rejected'), ('refunded', 'Refunded'), ('error', 'Error'), ('input', 'Input')], default='waiting', max_length=10)),
                ('fraud_status', models.CharField(choices=[('unknown', 'Unknown'), ('accept', 'Passed'), ('reject', 'Rejected'), ('review', 'Review')], default='unknown', max_length=10, verbose_name='fraud check')),
                ('fraud_message', models.TextField(blank=True, default='')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('transaction_id', models.CharField(blank=True, max_length=255)),
                ('currency', models.CharField(max_length=10)),
                ('total', models.DecimalField(decimal_places=2, default='0.0', max_digits=9)),
                ('delivery', models.DecimalField(decimal_places=2, default='0.0', max_digits=9)),
                ('tax', models.DecimalField(decimal_places=2, default='0.0', max_digits=9)),
                ('description', models.TextField(blank=True, default='')),
                ('billing_first_name', models.CharField(blank=True, max_length=256)),
                ('billing_last_name', models.CharField(blank=True, max_length=256)),
                ('billing_address_1', models.CharField(blank=True, max_length=256)),
                ('billing_address_2', models.CharField(blank=True, max_length=256)),
                ('billing_city', models.CharField(blank=True, max_length=256)),
                ('billing_postcode', models.CharField(blank=True, max_length=256)),
                ('billing_country_code', models.CharField(blank=True, max_length=2)),
                ('billing_country_area', models.CharField(blank=True, max_length=256)),
                ('billing_email', models.EmailField(blank=True, max_length=254)),
                ('customer_ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('extra_data', models.TextField(blank=True, default='')),
                ('message', models.TextField(blank=True, default='')),
                ('token', models.CharField(blank=True, default='', max_length=36)),
                ('captured_amount', models.DecimalField(decimal_places=2, default='0.0', max_digits=9)),
                ('full_price', models.DecimalField(decimal_places=2, default='0.0', max_digits=9)),
                ('pre_pay_discount', models.DecimalField(decimal_places=2, default='0.0', max_digits=9)),
                ('multiple_purchase_discount', models.DecimalField(decimal_places=2, default='0.0', max_digits=9)),
                ('credit_applied', models.DecimalField(decimal_places=2, default='0.0', max_digits=9)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('bio', models.TextField(blank=True, max_length=500)),
                ('level', models.IntegerField(default=0, verbose_name='skill level')),
                ('credit', models.FloatField(default=0, verbose_name='Class Payment Credit')),
                ('date_added', models.DateField(auto_now_add=True)),
                ('date_modified', models.DateField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=15)),
                ('key_day_date', models.DateField(default=classwork.models.default_key_day, verbose_name='main class start date')),
                ('max_day_shift', models.SmallIntegerField(default=-2, help_text='Use negative numbers if others are before the main class day.', verbose_name='number of days other classes are away from main class')),
                ('num_weeks', models.PositiveSmallIntegerField(default=5, verbose_name='number of class weeks')),
                ('publish_date', models.DateField(blank=True, default=classwork.models.default_publish)),
                ('expire_date', models.DateField(blank=True, help_text='If blank, this will be computed')),
                ('date_added', models.DateField(auto_now_add=True)),
                ('date_modified', models.DateField(auto_now=True)),
                ('break_weeks', models.PositiveSmallIntegerField(default=0, verbose_name='break weeks after this session')),
                ('flip_last_day', models.BooleanField(default=False, help_text='Possibly true if the skipped class is not on the day that normally is the end of the session.', verbose_name='due to skipped weeks, does the session ending switch between a non-key vs key day?')),
                ('skip_weeks', models.PositiveSmallIntegerField(default=0, verbose_name='skipped mid-session class weeks')),
            ],
        ),
        migrations.CreateModel(
            name='SiteContent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Descriptive name used to find this content', max_length=120)),
                ('text', models.TextField(blank=True, help_text='Text chunk used in page or email publication')),
                ('date_added', models.DateField(auto_now_add=True)),
                ('date_modified', models.DateField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(choices=[('Beg', 'Beginning'), ('L2', 'Lindy 2'), ('L3', 'Lindy 3'), ('Spec', 'Special Focus'), ('WS', 'Workshop'), ('Priv', 'Private Lesson'), ('PrivSet', 'Private - Multiple Lessons'), ('Other', 'Other')], default='Spec', max_length=8)),
                ('version', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('N', 'NA')], max_length=1)),
                ('title', models.CharField(default='Untitled', max_length=125)),
                ('num_weeks', models.PositiveSmallIntegerField(default=5)),
                ('num_minutes', models.PositiveSmallIntegerField(default=60)),
                ('description', models.TextField()),
                ('image', models.URLField(blank=True, max_length=191)),
                ('full_price', models.DecimalField(decimal_places=2, default=70.0, max_digits=6)),
                ('pre_pay_discount', models.DecimalField(decimal_places=2, default=5.0, max_digits=6)),
                ('multiple_purchase_discount', models.DecimalField(decimal_places=2, default=10.0, max_digits=6)),
                ('qualifies_as_multi_class_discount', models.BooleanField(default=True)),
                ('date_added', models.DateField(auto_now_add=True)),
                ('date_modified', models.DateField(auto_now=True)),
                ('tagline_1', models.CharField(blank=True, max_length=23)),
                ('tagline_2', models.CharField(blank=True, max_length=23)),
                ('tagline_3', models.CharField(blank=True, max_length=23)),
                ('level_num', models.DecimalField(blank=True, decimal_places=1, default=0, help_text='Will be computed if left blank. ', max_digits=3)),
            ],
        ),
        migrations.CreateModel(
            name='Registration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paid', models.BooleanField(default=False)),
                ('classoffer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='classwork.ClassOffer')),
                ('payment', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='classwork.Payment')),
                ('student', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='classwork.Profile')),
            ],
        ),
        migrations.AddField(
            model_name='profile',
            name='taken',
            field=models.ManyToManyField(related_name='students', through='classwork.Registration', to='classwork.ClassOffer'),
        ),
        migrations.AddField(
            model_name='payment',
            name='paid_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='paid_for', to='classwork.Profile'),
        ),
        migrations.AddField(
            model_name='payment',
            name='student',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payment', to='classwork.Profile'),
        ),
        migrations.AddField(
            model_name='classoffer',
            name='location',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='classwork.Location'),
        ),
        migrations.AddField(
            model_name='classoffer',
            name='session',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='classwork.Session'),
        ),
        migrations.AddField(
            model_name='classoffer',
            name='subject',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='classwork.Subject'),
        ),
        migrations.RenameField(
            model_name='classoffer',
            old_name='num_level',
            new_name='_num_level',
        ),
        migrations.AddField(
            model_name='classoffer',
            name='manager_approved',
            field=models.BooleanField(default=1),
        ),
        migrations.AlterField(
            model_name='profile',
            name='credit',
            field=models.FloatField(default=0, verbose_name='class payment credit'),
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('related_type', models.CharField(choices=[('Subject', 'Subject'), ('ClassOffer', 'ClassOffer'), ('Other', 'Other')], default='Subject', editable=False, max_length=15)),
                ('content_type', models.CharField(choices=[('url', 'External Link'), ('file', 'Formatted Text File'), ('text', 'Plain Text'), ('video', 'Video file on our site'), ('image', 'Image file on our site'), ('link', 'Webpage on our site'), ('email', 'Email file')], max_length=15)),
                ('user_type', models.PositiveSmallIntegerField(choices=[(0, 'Public'), (1, 'Student'), (2, 'Teacher'), (3, 'Admin')], default=1, help_text='Who is this for?')),
                ('avail', models.PositiveSmallIntegerField(choices=[(0, 'On Sign-up, before week 1)'), (1, 'After week 1'), (2, 'After week 2'), (3, 'After week 3'), (4, 'After week 4'), (5, 'After week 5'), (200, 'After completion')], default=0, help_text='When is this resource available?')),
                ('expire', models.PositiveSmallIntegerField(default=0, help_text='Number of published weeks? (0 for always)')),
                ('imagepath', models.ImageField(blank=True, help_text='If an image, upload here', upload_to='resource/')),
                ('filepath', models.FileField(blank=True, help_text='If a file, upload here', upload_to='resource/')),
                ('link', models.URLField(blank=True, help_text='External or Internal links go here', max_length=191)),
                ('text', models.TextField(blank=True, help_text='Text chunk used in page or email publication')),
                ('title', models.CharField(max_length=60)),
                ('description', models.TextField(blank=True)),
                ('date_added', models.DateField(auto_now_add=True)),
                ('date_modified', models.DateField(auto_now=True)),
                ('classoffer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='classwork.ClassOffer')),
                ('subject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='classwork.Subject')),
            ],
        ),
        migrations.AddField(
            model_name='classoffer',
            name='skip_tagline',
            field=models.CharField(blank=True, max_length=46),
        ),
        migrations.AddField(
            model_name='classoffer',
            name='skip_weeks',
            field=models.PositiveSmallIntegerField(default=0, verbose_name='skipped mid-session class weeks'),
        ),
        migrations.AlterField(
            model_name='payment',
            name='credit_applied',
            field=models.DecimalField(decimal_places=2, default='0.0', max_digits=6),
        ),
        migrations.AlterField(
            model_name='payment',
            name='full_price',
            field=models.DecimalField(decimal_places=2, default='0.0', max_digits=6),
        ),
        migrations.AlterField(
            model_name='payment',
            name='multiple_purchase_discount',
            field=models.DecimalField(decimal_places=2, default='0.0', max_digits=6),
        ),
        migrations.AlterField(
            model_name='payment',
            name='pre_pay_discount',
            field=models.DecimalField(decimal_places=2, default='0.0', max_digits=6),
        ),
        migrations.AlterField(
            model_name='profile',
            name='bio',
            field=models.TextField(blank=True, max_length=1530),
        ),
        migrations.RemoveField(
            model_name='classoffer',
            name='teachers',
        ),
        migrations.AlterField(
            model_name='registration',
            name='payment',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='classwork.Payment'),
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('bio', models.TextField(blank=True, max_length=760)),
                ('date_added', models.DateField(auto_now_add=True)),
                ('date_modified', models.DateField(auto_now=True)),
                ('level', models.IntegerField(blank=True, default=0, verbose_name='skill level')),
                ('credit', models.DecimalField(decimal_places=2, default=0.0, max_digits=6)),
                ('taken', models.ManyToManyField(related_name='students', through='classwork.Registration', to='classwork.ClassOffer')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('bio', models.TextField(blank=True, max_length=760)),
                ('date_added', models.DateField(auto_now_add=True)),
                ('date_modified', models.DateField(auto_now=True)),
                ('listing', models.SmallIntegerField(blank=True, default=0, help_text='listing order')),
                ('tax_doc', models.CharField(blank=True, max_length=9)),
                ('taught', models.ManyToManyField(related_name='teachers', to='classwork.ClassOffer')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AlterField(
            model_name='payment',
            name='paid_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='paid_for', to='classwork.Student'),
        ),
        migrations.AlterField(
            model_name='payment',
            name='student',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payment', to='classwork.Student'),
        ),
        migrations.AlterField(
            model_name='registration',
            name='student',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='classwork.Student'),
        ),
        migrations.DeleteModel(
            name='Profile',
        ),
    ]
